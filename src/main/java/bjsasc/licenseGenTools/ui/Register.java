/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bjsasc.licenseGenTools.ui;

import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.prefs.Preferences;

import javax.swing.JFrame;

import org.apache.commons.codec.digest.DigestUtils;

import bjsasc.licenseGenTools.utils.GetMachineInfo;
import bjsasc.licenseGenTools.utils.LicenseUtils;
import bjsasc.licenseGenTools.utils.ValidityPeriodJudge;

/**
 *
 * @author Test
 */
public class Register extends javax.swing.JDialog {

	static SimpleDateFormat format = new SimpleDateFormat("yyyyMMddHHmmss");

	static String encoding = "UTF-8";

	private static String dir = "";

	/**
     * Creates new form Register
	 * @throws IOException
     */
	public Register(java.awt.Frame parent, boolean modal, String path) throws IOException {
        super(parent, modal);
        initComponents();
        myInit(path);
    }
    /**
	 * 初始化
     * @throws IOException
	 */
	private void myInit(String path) throws IOException{
        // 居中显示
        this.setLocationRelativeTo(null);
        setTitle("用户注册");
        if(path!=""){
        	BufferedReader bufferedReader = new BufferedReader(new FileReader(path));
    		String str = bufferedReader.readLine();
    		bufferedReader.close();
            codeNumber.setText(str);
        	dir = path;
        }

//        Preferences pre = Preferences.systemRoot().node("/1.0");
//        pre.put("key", "RDQwQTUwRkVGNTMwQjgxMERENUQ5RTYzNTM1RDM0RTJDMDY1OUZFNjY0NzJDN0E2MDIxMjZBRDJFOUFDRTVERTkyMjlDNTc1NjQyREJDMTI1MkJDQzhCNDgxODgxNjVDRjRGNUNDNTI2ODA3MEY2QkIyNDFEMzI1NEQ0QkFBODZFOTJCNzY1RjAxMDc4MzlCOUQ1RDE4RUY1RjRFODc2MENDQ0M5QjhBMkMxNURGQ0NBRDZGNzU4QTBGRDZCQzA1NDY4MDVGMkYzOUExQkU4NDE4MDZBMjVCQkI4RENENjQ");
//        String license = pre.get("key", "");
//        System.out.println(license.equals(""));
	}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        registerCode = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        codeNumber = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        registerButton = new javax.swing.JButton();
        selectButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(500, 200));
        jPanel1.setLayout(new java.awt.BorderLayout());

        registerCode.setText("注册文件");
        registerCode.setPreferredSize(new java.awt.Dimension(60, 30));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(registerCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(registerCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(120, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3, java.awt.BorderLayout.LINE_START);

        codeNumber.setEditable(false);
        codeNumber.setPreferredSize(new java.awt.Dimension(300, 30));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(codeNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(codeNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(120, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel4, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        registerButton.setText("注册");
        registerButton.setPreferredSize(new java.awt.Dimension(60, 30));
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					registerButtonActionPerformed(evt);
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        selectButton.setText("打开");
        selectButton.setPreferredSize(new java.awt.Dimension(60, 30));
        selectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(280, Short.MAX_VALUE)
                .addComponent(selectButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(70, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) throws IOException {//GEN-FIRST:event_registerButtonActionPerformed
        // TODO add your handling code here:
    	/**
    	 * 判断注册码是否合法
    	 * 调用解密算法，将注册码解密
    	 */
    	String registerCode = codeNumber.getText();
    	try{
    		registerCode = LicenseUtils.decrypt(LicenseUtils.decodeData(registerCode));
    	}catch(Exception e){
			System.out.println("注册信息不合法，请重新注册");
    	}

    	//license解析，获取机器信息、生成时间、注册时间、最后操作时间、到期时间、功能列表
		String machineCode = registerCode.split("-")[0];
		String genTime = registerCode.split("-")[1];
		String regTime = registerCode.split("-")[2];
		String loTime = registerCode.split("-")[3];
		String dlTime = registerCode.split("-")[4];
		String funcList = "";
		if(registerCode.split("-").length>5){
			funcList = registerCode.split("-")[5];
		}


		String sysTime = format.format(new Date());
		String licenseUSERDIR = "";
		String licenseREGEDIT = "";

    	/**
    	 * 读取运行目录和注册表中注册信息，判断系统时间是否回调
    	 */
    	//获取软件运行目录下的license文本信息
    	String encoding = "UTF-8";
		File file = new File(System.getProperty("user.dir")+"\\注册信息-勿删改移动！\\license.cbs");
		if(file.isFile() && file.exists()){
			InputStreamReader inputStreamReader = new InputStreamReader(
					new FileInputStream(file), encoding);
			BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
			licenseUSERDIR = bufferedReader.readLine();
			bufferedReader.close();

			//license解密
			try{
				licenseUSERDIR = LicenseUtils.decrypt(LicenseUtils.decodeData(licenseUSERDIR));
	    		if(licenseUSERDIR.split("-")[3].compareTo(sysTime)>0){
	    			System.out.println("非法时间，请购买后注册");
					return;
	    		}
	    	}catch(Exception e){

	    	}
		}
		//获取注册表中的license信息
		Preferences pre = Preferences.systemRoot().node("/1.0");
		licenseREGEDIT = pre.get("key", "");
		//license解密
		if(!licenseREGEDIT.equals("")){
			try{
				licenseREGEDIT = LicenseUtils.decrypt(LicenseUtils.decodeData(licenseREGEDIT));
	    		if(licenseREGEDIT.split("-")[3].compareTo(sysTime)>0){
	    			System.out.println("非法时间，请购买后注册");
					return;
	    		}
	    	}catch(Exception e){

	    	}
		}

    	/**
    	 * 解析注册码，并判断注册码本身、机器信息、系统时间是否合法
    	 * 任一问题均无法注册
    	 * 注册成功后修改源文件注册码，同时在运行目录和注册表下生成注册信息
    	 */

		//判断机器是否匹配
    	if(!machineCode.equals(DigestUtils.md5Hex(GetMachineInfo.getCPUSerical()
				+ GetMachineInfo.getHardDiskSerical()).toUpperCase())){
			System.out.println("非法机器，请购买后注册");
			return;
		}
    	//判断时间信息是否合法
    	if(genTime.compareTo(regTime)<=0 && (regTime.compareTo(loTime)<=0) &&
				(loTime.compareTo(sysTime))<0){
			if(sysTime.compareTo(dlTime)<0){

				//生成注册信息，并更新注册时间和最后一次操作时间
				String newLicense = machineCode+"-"+genTime+"-"+sysTime+"-"+sysTime
						+"-"+dlTime+"-"+funcList;
				////////////////////////////////////////////////////////////
				System.out.println("注册后更新注册时间和最后一次操作时间："+newLicense);
				ValidityPeriodJudge.writeSoftwareRegiserTime(newLicense);

				//更新注册文档中的license信息
				File fileDir = new File(dir);
				//写入时间
				try {
					FileWriter writer = new FileWriter(fileDir);
					BufferedWriter bufferedWriter = new BufferedWriter(writer);
					bufferedWriter.write(LicenseUtils.encodeData(LicenseUtils.encrypt(newLicense)));
					bufferedWriter.flush();
					bufferedWriter.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

				System.out.println("注册成功！");
				this.setVisible(false);

			}else{
				System.out.println("软件已过期，请重新购买");
				return;
			}
		}else{
			System.out.println("非法时间，请购买后注册");
			return;
		}


    	//判断系统时间是否合法
//    	else{
//			String startDate = registerCode.substring(32, 46);
//			String endDate = registerCode.substring(46, 60);
//			SimpleDateFormat format = new SimpleDateFormat("yyyyMMddHHmmss");
//			Date registerDate = null;
//			Date deadlineDate = null;
//			try {
//				registerDate = format.parse(startDate);
//				deadlineDate = format.parse(endDate);
//			} catch (ParseException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			}
//
//			//判断系统时间是否早于注册时间，晚于到期时间
//			if( registerDate.after( new Date() ) ){
//				System.out.println("弹窗提示系统时间非法，请重新注册");
//			}else if( new Date().after(deadlineDate) ){
//				System.out.println("弹窗提示已过期，请重新注册");
//			}else{
//				//注册成功，将注册码写到运行目录下
//	    		File file = new File(System.getProperty("user.dir")+"\\注册信息-勿删改移动！\\license.cbs");
//	    		File dir = file.getParentFile();
//	    		//创建目录
//	        	if(!dir.exists()){
//	        		dir.mkdirs();
//	        	}
//	        	//创建文件
//	    		if(!file.exists()){
//	    			try {
//	    				file.createNewFile();
//	    			} catch (IOException e) {
//	    				// TODO Auto-generated catch block
//	    				e.printStackTrace();
//	    			}
//	    		}
//	    		try {
//	        		FileWriter writer = new FileWriter(file);
//	    			BufferedWriter bufferedWriter = new BufferedWriter(writer);
//	    			bufferedWriter.write(registerCode);
//	    			bufferedWriter.flush();
//	    			bufferedWriter.close();
//				} catch (IOException e) {
//					// TODO Auto-generated catch block
//					e.printStackTrace();
//				}
//
//	        	//将注册成功时间写入注册表和本地目录下文件
//	        	ValidityPeriodJudge.writeSoftwareRegiserTime();
//	        	ValidityPeriodJudge.updateSoftewareLastOptTime();
//
//				System.out.println("注册成功！");
//				this.setVisible(false);
//			}
//		}
    }//GEN-LAST:event_registerButtonActionPerformed

    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed
        // TODO add your handling code here:
    	this.setVisible(false);
    	selectFile selectFile = new selectFile(new JFrame(), true);
    	selectFile.setVisible(true);
    }//GEN-LAST:event_selectButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Register dialog = null;
				try {
					dialog = new Register(new javax.swing.JFrame(), true, dir);
				} catch (HeadlessException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}

                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField codeNumber;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton registerButton;
    private javax.swing.JLabel registerCode;
    private javax.swing.JButton selectButton;
    // End of variables declaration//GEN-END:variables
}
